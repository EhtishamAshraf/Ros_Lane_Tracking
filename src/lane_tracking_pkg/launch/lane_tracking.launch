<launch>
    <env name="GAZEBO_RESOURCE_PATH" value="$(find lane_tracking_pkg)/worlds" />
    
     <arg name="log_pose_to_file" default="false"/>
    
    <!-- Gazebo Simulation with Turtlebot3 Robot -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find lane_tracking_pkg)/worlds/turtlebot3_autorace_modified.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- Spawing Robot -->
    <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_burger_for_autorace_2020.urdf.xacro " />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_burger -x 0.225 -y -1.767 -z 0.0 -Y 0 -param robot_description" />
    
    <!-- Camera view - Node | rqt_image_view can be used to find out the exact topic name-->
    <node pkg="image_view" type="image_view" name="image_view" output="screen">
        <remap from="image" to="/camera/image"/>
    </node>
    
    <!-- Lane with centroids data - Node-->
    <node if="$(arg log_pose_to_file)" pkg="lane_tracking_pkg" type="lane_with_centroids.py" name="lane_with_centroids" output="screen"/>

    <!-- Lane Tracking - Node-->
    <node unless="$(arg log_pose_to_file)" pkg="lane_tracking_pkg" type="lane_tracking.py" name="lane_tracking_node" output="screen"/>

</launch>